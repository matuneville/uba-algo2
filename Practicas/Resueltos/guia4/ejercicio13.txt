EJERCICIO 13: DISEÑO DE TAD TORNEO

Tenemos una lista por posicion que dice cuantos equipos hay en esa posicion, y cuantos puntos tienen. En la Rep tendriamos que estr.posciones esta ordenada por .posicion. Ej: <(1, 7, 2), (2, 6, 1), (3, 4, 3)>

a)TAD Torneo se explica con estr;
  estr es tupla<
                 equipos: diccLog(equipo, itLista),
                 posiciones: lista(tupla(posicion, puntos, cantEquipos)),
                >

donde equipo, puntos, posicion, cantEquipos son nat


iPUNTOS(in t: torneo, in e: equipo) ➔ nat {

    itPos := obtener(e, t.equipos);      // O(log n)

    return siguiente(itPos).puntos;
}


iPOSICION(in t: torneo, in e: equipo) ➔ nat {

    itPos := obtener(e, t.equipos);      // O(log n)

    return siguiente(itPos).posicion;
}


iREG_PARTIDO(inout t: torneo, in e: equipo) {

    itPos := obtener(e, t.equipos);      // O(log n)

    // es un dolor de huevos esto hermano
}



simbolos × ➔ ∀ ∃ ≡ ∈ π ∧ ∨ ⇔ • ◦ ≥ ≤ ≠ ``` α ¬
